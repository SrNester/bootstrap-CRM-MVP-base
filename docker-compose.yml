services:
  db:
    image: postgres:15
    container_name: crm_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: crm_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    container_name: crm_backend
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - ai
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app

  celery_worker:
    build: ./backend
    container_name: crm_celery_worker
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - backend
      - redis
      - db
    command: ["celery", "-A", "config.celery_app", "worker", "-l", "info"]
    volumes:
      - ./backend:/app

  celery_beat:
    build: ./backend
    container_name: crm_celery_beat
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - backend
      - redis
      - db
    command: ["celery", "-A", "config.celery_app", "beat", "-l", "info"]
    volumes:
      - ./backend:/app

  ai:
    build: ./ai_orchestrator
    container_name: crm_ai
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "9000:9000"

volumes:
  pgdata: